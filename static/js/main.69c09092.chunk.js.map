{"version":3,"sources":["assets/Liberal.JPG","assets/Fascist.JPG","assets/liberal-card-space.JPG","assets/liberal-card-enact.JPG","assets/liberal-card-win.JPG","assets/fascist-card-space.JPG","assets/fascist-card-enact.JPG","assets/fascist-card-win.JPG","firebaseConfig.js","firestore.js","theme.js","utils.js","PlayerList.js","Government.js","EventList.js","RoleModal.js","RoleReveal.js","DisplayPolicies.js","ChoosePolicies.js","GameStatus.js","ActionBar.js","SpecialRulesModal.js","App.js","Main.js","Game.js","Routes.js","index.js"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","firestore","theme","blueTeam","redTeam","redTeamLeader","presidentTitle","chancellorTitle","RED","BLUE","updateGame","gameRef","newGame","set","lastUpdate","FieldValue","serverTimestamp","countPolicies","game","liberalPolicies","enactedPolicies","filter","p","liberal","length","fascist","identifyHitler","roles","players","i","hitlerIsChancellor","hitlerPlayer","get","refreshPolicies","shuffle","discards","policies","getRoleName","role","defaultTheme","isGameOver","gameOver","counts","governmentApproved","getThemedPolicyName","policy","PlayerList","playerName","headline","onPlayerClick","showRoles","government","president","chancellor","className","map","name","key","onClick","Government","showPotentialGovernment","EventList","show","events","shownEvents","slice","e","RoleModal","autoReveal","onHide","useState","setShow","handleClose","roleName","Modal","Header","closeButton","Title","capitalize","Body","alt","src","LiberalCardImg","FascistCardImg","r","getFascists","join","Footer","Button","variant","RoleReveal","handleOkay","team","getRoleTeam","DisplayPolicies","onPolicyClick","chosen","cardImg","ChoosePolicies","resetChosen","Array","fill","policyChoices","setChosen","vetoChoice","accept","produce","draft","event","presidentHasChosen","chancellorHasVetoed","push","presidentRejectedVeto","console","log","getPolicies","job","type","idx","newChosen","togglePolicy","newPolicyChoices","unchosen","newPolicy","themedPolicyName","lastPresident","lastChancellor","confirmChoice","PolicySpace","img","GameStatus","endDeclaration","_","LiberalEnactedImage","LiberalSpaceImage","LiberalCardWin","FascistEnactedImage","FascistSpaceImage","FascistCardWin","ActionBar","confirmationNeeded","setConfirmationNeeded","viewing","setViewing","doneViewing","setDoneViewing","preparedState","setPreparedState","started","confirmAction","bool","tempPolicies","enactTopPolicy","presidentShouldInvestigate","SpecialRulesModal","numPlayers","withRouter","props","hosting","setName","setPresident","setChancellor","viewingIdentity","setViewingIdentity","chosenPlayer","setChosenPlayer","setGovernment","approved","handlePlayerClick","numLiberals","Math","ceil","randomRoles","result","forEach","assignRoles","L","F","createPolicies","wasLastPresident","value","onChange","target","defaultGame","host","presidentShouldKill","vetoAvailable","savedName","localStorage","getItem","setGame","gameCode","setGameCode","setGameRef","setHosting","submitted","setSubmitted","handleHosting","a","preventDefault","setItem","collection","doc","gRef","onSnapshot","gameData","data","update","handleCreateGame","wordCode","arr","words","random","code","onSubmit","history","location","useEffect","register","includes","Routes","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69c09092.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Liberal.5179a2ef.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Fascist.ed402502.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-space.f5c7314a.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-enact.5179a2ef.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-win.de286c5f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-space.61fe29af.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-enact.ed402502.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-win.84f89324.JPG\";","const firebaseConfig = {\n  apiKey: 'AIzaSyAvSp91vcvkgt9RYafRIgY8noH4NSX0P0g',\n  authDomain: 'isthisprime.firebaseapp.com',\n  databaseURL: 'https://isthisprime.firebaseio.com',\n  projectId: 'isthisprime',\n  storageBucket: 'isthisprime.appspot.com',\n  messagingSenderId: '522572340456',\n  appId: '1:522572340456:web:3f0afa40b9cb7d8550bd5d',\n}\n\nexport default firebaseConfig\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firebaseConfig from './firebaseConfig'\nimport 'firebase/auth'\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics()\n\nconst firestore = firebase.firestore()\n\nexport default firestore\n","const theme = {\n  blueTeam: 'Gryffindor',\n  redTeam: 'Death-Eater',\n  redTeamLeader: 'Voldemort',\n  presidentTitle: 'Minister',\n  chancellorTitle: 'Vice-Minister',\n  RED: 'BAD',\n  BLUE: 'GOOD',\n}\n\nexport default theme\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { get, shuffle, map, filter } from 'lodash'\nimport defaultTheme from './theme'\n\nexport const updateGame = (gameRef, newGame) => {\n  gameRef.set({\n    ...newGame,\n    lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n  })\n}\n\nexport const countPolicies = (game) => {\n  const liberalPolicies = game.enactedPolicies.filter((p) => p === 'BLUE')\n  return {\n    liberal: liberalPolicies.length,\n    fascist: game.enactedPolicies.length - liberalPolicies.length,\n  }\n}\n\nexport const identifyHitler = (game) => {\n  const roles = game.roles\n  const players = game.players\n  let role\n  for (let i = 0; i < players.length; i++) {\n    role = roles[players[i]]\n    if (role === 'redLeader') {\n      return players[i]\n    }\n  }\n}\n\nexport const hitlerIsChancellor = (game) => {\n  const hitlerPlayer = identifyHitler(game)\n  const currentChancellor = get(game, 'government.chancellor')\n  return currentChancellor === hitlerPlayer\n}\n\nexport const hitlerAsChancellorWin = (game) => {\n  const counts = countPolicies(game)\n  const hitlerPlayer = identifyHitler(game)\n  const currentChancellor = get(game, 'government.chancellor')\n  if (counts.fascist < 3 || !game.governmentApproved || currentChancellor !== hitlerPlayer) {\n    return false\n  }\n  return true\n}\n\nexport const refreshPolicies = (game) => {\n  return shuffle([...game.discards, ...game.policies])\n}\n\nexport const getRoleName = (role, theme = defaultTheme) => {\n  const { blueTeam, redTeam, redTeamLeader } = theme\n  if (role === 'blue') {\n    return blueTeam\n  }\n  if (role === 'red') {\n    return redTeam\n  }\n  if (role === 'redLeader') {\n    return redTeamLeader\n  }\n}\n\nexport const getRoleTeam = (role, theme = defaultTheme) => {\n  const { blueTeam, redTeam } = theme\n  if (role === 'blue') {\n    return blueTeam\n  }\n  return redTeam\n}\n\nexport const getFascists = (game) => {\n  const { roles } = game\n  const fascists = filter(\n    map(roles, (r, name) => {\n      // console.log(r, name)\n      const result = r !== 'blue' ? name : null\n      return result\n    }),\n  )\n  return fascists\n}\n\nexport const createPolicies = () => {\n  const L = Array(6).fill('BLUE')\n  const F = Array(11).fill('RED')\n  const policies = [...L, ...F]\n  return shuffle(policies)\n}\n\nexport const assignRoles = (game) => {\n  const { players } = game\n  const numLiberals = Math.ceil(0.5 + players.length / 2)\n  let roles = Array(numLiberals).fill('blue')\n  roles.push('redLeader')\n  while (roles.length < players.length) {\n    roles.push('red')\n  }\n  const randomRoles = shuffle(roles)\n  const result = {}\n  players.forEach((p, i) => {\n    result[p] = randomRoles[i]\n  })\n  return result\n}\n\nexport const isGameOver = (game) => {\n  if (game.gameOver) {\n    return true\n  }\n\n  const counts = countPolicies(game)\n\n  if (counts.fascist === 6) {\n    return true\n  }\n\n  if (counts.liberal === 5) {\n    return true\n  }\n\n  if (counts.fascist >= 3 && game.governmentApproved && hitlerIsChancellor(game)) {\n    return true\n  }\n  return false\n}\n\nexport const getThemedPolicyName = (policy, theme = defaultTheme) => {\n  return theme[policy]\n}\n","import React from 'react'\nimport theme from './theme'\nimport { getRoleName } from './utils'\n\nfunction PlayerList({\n  game,\n  playerName,\n  headline = 'Players',\n  onPlayerClick = () => {},\n  showRoles = false,\n}) {\n  if (!game) {\n    return null\n  }\n  let { president, chancellor } = game.government\n\n  return (\n    <div className=\"section\">\n      <h2 className=\"text-center\">{headline}</h2>\n      <div className=\"row\">\n        {game.players.map((name, i) => {\n          const role = getRoleName(game.roles[name])\n\n          return (\n            <div className=\"col-4 col-md-3 my-3 player-card\" key={`player-${i}`}>\n              <div className=\"card h-100\">\n                <div\n                  className={`py-3 text-center ${name === president ? 'president' : ''} ${\n                    name === chancellor ? 'chancellor' : ''\n                  } `}\n                  onClick={() => {\n                    onPlayerClick(name)\n                  }}\n                >\n                  <div>\n                    <i className=\"fas fa-user\"></i>\n                  </div>\n                  <p>\n                    {name} {name === playerName ? '(you)' : ''}\n                  </p>\n                  {name === president && <p>{theme.presidentTitle}</p>}\n                  {name === chancellor && <p>{theme.chancellorTitle}</p>}\n                  {showRoles && (\n                    <p className={`${game.roles[name] === 'blue' ? 'blue' : 'red'}`}>{role}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerList\n","import React from 'react'\nimport theme from './theme'\n\nfunction Government({ game, showPotentialGovernment = false, president = '', chancellor = '' }) {\n  if (!showPotentialGovernment) {\n    return null\n  }\n  return (\n    <div className=\"row mt-3\">\n      <div className=\"col-8\">\n        <div className=\"row\">\n          <div className=\"col-5\">Proposed {theme.presidentTitle}:</div>\n          <div className=\"col-6\">{president}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-5\">Proposed {theme.chancellorTitle}:</div>\n          <div className=\"col-6\">{chancellor}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Government\n","import React from 'react'\n\nfunction EventList({ game, show = 0 }) {\n  const { events } = game\n  if (events.length === 0) {\n    return null\n  }\n\n  const shownEvents = show > 0 ? events.slice(-1 * show) : [...events]\n\n  return (\n    <>\n      <h3>Events</h3>\n      <ul className=\"list-group event-list\">\n        {shownEvents.map((e, i) => {\n          return (\n            <li className=\"list-group-item\" key={`event-${i}`}>\n              {e}\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default EventList\n","import React, { useState } from 'react'\nimport { capitalize } from 'lodash'\nimport { identifyHitler, getFascists, getRoleName } from './utils'\nimport LiberalCardImg from './assets/Liberal.JPG'\nimport FascistCardImg from './assets/Fascist.JPG'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport theme from './theme'\n\nfunction RoleModal({ game, playerName, autoReveal = false, onHide = () => {} }) {\n  const [show, setShow] = useState(autoReveal === true)\n\n  const handleClose = () => {\n    onHide()\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n  const { roles } = game\n  const hitlerPlayer = identifyHitler(game)\n  const role = roles[playerName]\n  const { redTeam, redTeamLeader } = theme\n  const roleName = getRoleName(role, theme)\n\n  return (\n    <>\n      <button className=\"btn btn-primary ml-3\" onClick={handleShow}>\n        Reveal Secret Role\n      </button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Your Secret Role: {capitalize(roleName)} </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row justify-content-center role-reveal\">\n            <div className=\"col-3\">\n              {role === 'blue' ? (\n                <img alt=\"blue card\" src={LiberalCardImg} />\n              ) : (\n                <img alt=\"red card\" src={FascistCardImg} />\n              )}\n            </div>\n          </div>\n          {(role === 'red' || (role === redTeamLeader && game.players.length < 7)) && (\n            <>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <p>\n                    {capitalize(redTeamLeader)} is: {hitlerPlayer}\n                  </p>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <p>\n                    All {redTeam}s: {getFascists(game).join(', ')}\n                  </p>\n                </div>\n              </div>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default RoleModal\n","import React from 'react'\nimport { getRoleTeam } from './utils'\n\nfunction RoleReveal({ game, playerName, handleOkay }) {\n  const { roles } = game\n  const role = roles[playerName]\n  const team = getRoleTeam(role)\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-4 col-md-3\">\n          <div className=\"card shadow p-3 text-center\">\n            <div className=\"row\">\n              <div className=\"col\">Player: {playerName}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">Role: {team}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <button className=\"btn btn-primary mt-4\" onClick={handleOkay}>\n                  OK\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RoleReveal\n","import React from 'react'\nimport LiberalCardImg from './assets/Liberal.JPG'\nimport FascistCardImg from './assets/Fascist.JPG'\n\nfunction DisplayPolicies({ policies, onPolicyClick = () => {}, chosen = [] }) {\n  return (\n    <div className=\"row\">\n      {policies.map((policy, i) => {\n        const cardImg = policy === 'BLUE' ? LiberalCardImg : FascistCardImg\n\n        return (\n          <div key={`policy-${i}`} className=\"col-2 text-center\">\n            <div className=\"card py-4 policy-space\" onClick={() => onPolicyClick(i)}>\n              <img className=\"card-img-top\" src={cardImg} alt=\"policy choice\" />\n              <div className=\"mt-2\">\n                {chosen[i] ? (\n                  <i className=\"fas fa-check green\"></i>\n                ) : (\n                  <i className=\"fas fa-times red\"></i>\n                )}\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DisplayPolicies\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { capitalize, get } from 'lodash'\nimport { updateGame, countPolicies, getThemedPolicyName } from './utils'\nimport theme from './theme'\nimport DisplayPolicies from './DisplayPolicies'\n\nfunction ChoosePolicies({ game, playerName, gameRef }) {\n  const resetChosen = () => {\n    return Array(3).fill(false)\n  }\n\n  const policies = game.policyChoices\n  const [chosen, setChosen] = useState(resetChosen())\n  const getJob = () => {\n    const pres = get(game, 'government.president')\n    if (pres === playerName) {\n      return theme.presidentTitle\n    }\n    const chan = get(game, 'government.chancellor')\n    if (chan === playerName) {\n      return theme.chancellorTitle\n    }\n    return null\n  }\n\n  const gameReducer = (action) =>\n    produce(game, (draft) => {\n      let event\n      switch (action.type) {\n        case 'veto':\n          draft.presidentHasChosen = false\n          if (game.chancellorHasVetoed) {\n            draft.discards.push(...game.policyChoices)\n            draft.policyChoices = []\n            event = `${capitalize(theme.presidentTitle)} has agreed to veto`\n            draft.governmentApproved = false\n            draft.government = {\n              president: '',\n              chancellor: '',\n            }\n          } else {\n            event = `${theme.chancellorTitle} has proposed a veto`\n            draft.chancellorHasVetoed = true\n          }\n          draft.events.push(event)\n          return\n        case 'confirm':\n          const newPolicyChoices = getPolicies()\n          const unchosen = policies.filter((p, i) => {\n            return !chosen[i]\n          })[0]\n          draft.discards.push(unchosen)\n          if (newPolicyChoices.length === 1) {\n            const newPolicy = newPolicyChoices[0]\n            event = `A new policy has been chosen: ${newPolicy}`\n            draft.enactedPolicies.push(newPolicy)\n            draft.policyChoices = []\n            draft.presidentHasChosen = false\n            draft.governmentApproved = false\n            draft.government = {\n              president: '',\n              chancellor: '',\n            }\n          } else {\n            draft.presidentHasChosen = true\n            draft.policyChoices = newPolicyChoices\n          }\n          draft.events.push(event)\n          return\n      }\n    })\n\n  const vetoChoice = (accept = true) => {\n    const newGame = produce(game, (draft) => {\n      let event\n      draft.presidentHasChosen = false\n      if (!accept) {\n        draft.presidentRejectedVeto = true\n        event = `${theme.presidentTitle} has rejected the veto`\n      } else {\n        if (game.chancellorHasVetoed) {\n          draft.discards.push(...game.policyChoices)\n          draft.policyChoices = []\n          event = `${theme.presidentTitle} has agreed to veto`\n          draft.governmentApproved = false\n          draft.chancellorHasVetoed = false\n          draft.presidentHasChosen = false\n          draft.government = {\n            president: '',\n            chancellor: '',\n          }\n        } else {\n          event = `${theme.chancellorTitle} has proposed a veto`\n          draft.chancellorHasVetoed = true\n        }\n      }\n      draft.events.push(event)\n    })\n    console.log(newGame)\n\n    updateGame(gameRef, newGame)\n  }\n\n  const confirmChoice = () => {\n    const newPolicyChoices = getPolicies()\n    const unchosen = policies.filter((p, i) => {\n      return !chosen[i]\n    })[0]\n    const newGame = produce(game, (draft) => {\n      draft.discards.push(unchosen)\n      if (newPolicyChoices.length === 1) {\n        const newPolicy = newPolicyChoices[0]\n        const themedPolicyName = getThemedPolicyName(newPolicy)\n        const event = `A new policy has been chosen: ${themedPolicyName}`\n        draft.enactedPolicies.push(newPolicy)\n        draft.policyChoices = []\n        draft.events.push(event)\n        draft.presidentHasChosen = false\n        draft.governmentApproved = false\n        draft.chancellorHasVetoed = false\n        draft.presidentRejectedVeto = false\n        draft.government = {\n          president: '',\n          chancellor: '',\n        }\n        draft.lastPresident = game.government.president\n        draft.lastChancellor = game.government.chancellor\n      } else {\n        draft.presidentHasChosen = true\n        draft.policyChoices = newPolicyChoices\n      }\n    })\n\n    updateGame(gameRef, newGame)\n    setChosen(resetChosen())\n  }\n\n  const togglePolicy = (idx) => {\n    const newChosen = produce(chosen, (draft) => {\n      draft[idx] = !draft[idx]\n    })\n    setChosen(newChosen)\n  }\n\n  const getPolicies = () => {\n    return policies.filter((p, i) => {\n      return chosen[i]\n    })\n  }\n\n  if (!game.governmentApproved) {\n    return null\n  }\n\n  const job = getJob()\n\n  if (!job) {\n    return 'Waiting for government to choose a new policy...'\n  }\n\n  if (\n    job === theme.presidentTitle &&\n    !game.chancellorHasVetoed &&\n    game.policyChoices.length === 2\n  ) {\n    return `Waiting for ${theme.chancellorTitle}...`\n  }\n\n  if (job === theme.presidentTitle && game.presidentRejectedVeto) {\n    return `Rejected veto. Waiting for ${theme.chancellorTitle}...`\n  }\n\n  if (job === theme.chancellorTitle && game.chancellorHasVetoed && !game.presidentRejectedVeto) {\n    return `Veto proposed. Waiting for ${theme.presidentTitle} to decide.`\n  }\n\n  if (\n    job === theme.chancellorTitle &&\n    !game.chancellorHasVetoed &&\n    game.policyChoices.length === 3\n  ) {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <p>You are the {job}</p>\n          <p>Waiting for {theme.presidentTitle} to choose</p>\n        </div>\n      </div>\n    )\n  }\n\n  const counts = countPolicies(game)\n\n  if (job === theme.presidentTitle && game.chancellorHasVetoed) {\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>{capitalize(theme.chancellorTitle)} wants to veto these policies. Agree?</h2>\n          </div>\n        </div>\n        <DisplayPolicies policies={game.policyChoices} onPolicyClick={() => {}} chosen={chosen} />\n        <div className=\"row mt-3\">\n          <div className=\"col-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                vetoChoice()\n              }}\n            >\n              Agree to Veto\n            </button>\n          </div>\n          <div className=\"col-3\">\n            <button\n              type=\"button\"\n              className=\"btn btn-warning\"\n              onClick={() => {\n                vetoChoice(false)\n              }}\n            >\n              Reject Veto\n            </button>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <p>\n            You are the {job}.{' '}\n            {job === theme.presidentTitle\n              ? 'Choose 2 policies to keep'\n              : 'Choose a policy to adopt'}\n          </p>\n          {game.presidentRejectedVeto && (\n            <p>The {theme.presidentTitle} rejected your veto. Choose a policy to enact</p>\n          )}\n        </div>\n      </div>\n      <DisplayPolicies\n        policies={game.policyChoices}\n        onPolicyClick={(i) => togglePolicy(i)}\n        chosen={chosen}\n      />\n      <div className=\"row\">\n        <div className=\"col\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mt-2\"\n            onClick={() => {\n              const confirmed = getPolicies()\n              if (confirmed.length === policies.length - 1) {\n                confirmChoice(chosen)\n              }\n            }}\n          >\n            Confirm\n          </button>\n        </div>\n        {counts.fascist === 5 && job === theme.chancellorTitle && !game.presidentRejectedVeto && (\n          <div className=\"col\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={() => {\n                vetoChoice()\n              }}\n            >\n              Veto\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default ChoosePolicies\n","import React from 'react'\nimport { countPolicies, hitlerIsChancellor, isGameOver } from './utils'\nimport LiberalSpaceImage from './assets/liberal-card-space.JPG'\nimport LiberalEnactedImage from './assets/liberal-card-enact.JPG'\nimport LiberalCardWin from './assets/liberal-card-win.JPG'\nimport FascistSpaceImage from './assets/fascist-card-space.JPG'\nimport FascistEnactedImage from './assets/fascist-card-enact.JPG'\nimport FascistCardWin from './assets/fascist-card-win.JPG'\nimport { capitalize } from 'lodash'\nimport theme from './theme'\n\nfunction PolicySpace({ img }) {\n  return (\n    <div className=\"col-2 col-md-1\">\n      <div className=\"card py-2 policy-space\">\n        <img alt=\"policy card\" src={img} />\n      </div>\n    </div>\n  )\n}\n\nfunction GameStatus({ game }) {\n  const counts = countPolicies(game)\n  const { blueTeam, redTeam, redTeamLeader } = theme\n  const gameOver = isGameOver(game)\n\n  let endDeclaration\n  if (counts.fascist === 6) {\n    endDeclaration = <h1>{capitalize(redTeam)}s Win with 6 Policies!</h1>\n  }\n\n  if (counts.liberal === 5) {\n    endDeclaration = <h1>{capitalize(blueTeam)}s Win with 5 Policies!</h1>\n  }\n\n  if (counts.fascist >= 3 && game.governmentApproved && hitlerIsChancellor(game)) {\n    endDeclaration = (\n      <h1>\n        {capitalize(redTeam)}s win Because {capitalize(redTeamLeader)} is Chancellor!\n      </h1>\n    )\n  }\n\n  if (gameOver) {\n    return <>{endDeclaration}</>\n  }\n\n  return (\n    <>\n      <div className=\"row mt-3\">\n        {/* <ul>\n          <li>Liberal Policies: {counts.liberal} </li>\n          <li>Fascist Policies: {counts.fascist} </li>\n        </ul> */}\n        <ul>\n          <li>Policies Left in Deck: {game.policies.length}</li>\n          <li>Discarded: {game.discards.length} </li>\n        </ul>\n      </div>\n      <div className=\"row\">\n        {Array(counts.liberal)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`libs-en-${i}`} img={LiberalEnactedImage} />\n          })}\n        {Array(4 - counts.liberal)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`libs-en-${i}`} img={LiberalSpaceImage} />\n          })}\n        <PolicySpace img={LiberalCardWin} />\n      </div>\n      <div className=\"row mt-4\">\n        {Array(counts.fascist)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`fasc-en-${i}`} img={FascistEnactedImage} />\n          })}\n        {Array(5 - counts.fascist)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`fasc-${i}`} img={FascistSpaceImage} />\n          })}\n\n        <PolicySpace img={FascistCardWin} />\n      </div>\n    </>\n  )\n}\n\nexport default GameStatus\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { updateGame, refreshPolicies, getThemedPolicyName } from './utils'\nimport DisplayPolicies from './DisplayPolicies'\n\nfunction ActionBar({ game, gameRef, playerName = '' }) {\n  const [confirmationNeeded, setConfirmationNeeded] = useState(false)\n  const [viewing, setViewing] = useState(false)\n  const [doneViewing, setDoneViewing] = useState(true)\n  const [preparedState, setPreparedState] = useState(null)\n\n  if (!game.started) {\n    return null\n  }\n\n  const confirmAction = (bool) => {\n    if (bool) {\n      updateGame(gameRef, preparedState)\n      if (viewing) {\n        setDoneViewing(false)\n      }\n    }\n    setPreparedState(null)\n    setViewing(false)\n    setConfirmationNeeded(false)\n  }\n\n  const enactTopPolicy = () => {\n    const newGame = produce(game, (draft) => {\n      let tempPolicies = game.policies\n      if (game.policies.length === 0) {\n        tempPolicies = refreshPolicies(game)\n        draft.discards = []\n      }\n      const newPolicy = tempPolicies[0]\n      const themedPolicyName = getThemedPolicyName(newPolicy)\n      const event = `Government in chaos! New policy enacted: ${themedPolicyName}`\n      draft.policies = tempPolicies.slice(1)\n      draft.enactedPolicies.push(newPolicy)\n      draft.events.push(event)\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  const viewTopPolicies = () => {\n    const newGame = produce(game, (draft) => {\n      let tempPolicies = game.policies\n      if (game.policies.length < 3) {\n        tempPolicies = refreshPolicies(game)\n        draft.discards = []\n      }\n      const event = `${playerName} viewed the top policies`\n      draft.policies = tempPolicies\n      draft.events.push(event)\n    })\n    setConfirmationNeeded(true)\n    setViewing(true)\n    setPreparedState(newGame)\n  }\n\n  const allowInvestigation = () => {\n    const newGame = produce(game, (draft) => {\n      draft.presidentShouldInvestigate = true\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  const endGame = () => {\n    const newGame = produce(game, (draft) => {\n      draft.gameOver = true\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  if (!doneViewing) {\n    return (\n      <DisplayPolicies\n        onPolicyClick={() => {\n          setDoneViewing(true)\n        }}\n        policies={game.policies.slice(0, 3)}\n      />\n    )\n  }\n\n  return (\n    <>\n      {!confirmationNeeded ? (\n        <div className=\"row mt-3\">\n          <div className=\"col-6 col-md-3\">\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                enactTopPolicy()\n              }}\n            >\n              Enact Top Policy\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={viewTopPolicies}>\n              View Top Policies\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={allowInvestigation}>\n              Allow Investigation\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={endGame}>\n              End Game\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"row mt-3\">\n          <div className=\"col-4 col-md-3\">\n            <button\n              className=\"btn btn-danger mr-3\"\n              onClick={() => {\n                confirmAction(true)\n              }}\n            >\n              Confirm\n            </button>\n            <button\n              className=\"btn btn-info\"\n              onClick={() => {\n                confirmAction(false)\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ActionBar\n","import React, { useState } from 'react'\nimport { capitalize } from 'lodash'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport theme from './theme'\n\nfunction SpecialRulesModal({ game }) {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => {\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const numPlayers = game.players.length\n\n  const { blueTeam, redTeam, redTeamLeader } = theme\n\n  return (\n    <>\n      <button className=\"btn btn-primary ml-3\" onClick={handleShow}>\n        Show Rules\n      </button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Rules for {numPlayers} players </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ul>\n            {numPlayers <= 6 && (\n              <>\n                <li>Two players are {redTeam}s</li>\n                <li>\n                  {capitalize(redTeamLeader)} knows who the {redTeam} is\n                </li>\n                <li>\n                  After the 3rd {redTeam} policy is enacted, the {theme.presidentTitle} will view\n                  the top three policy cards, then put them back without changing the order\n                </li>\n              </>\n            )}\n            {numPlayers >= 7 && (\n              <>\n                {numPlayers < 9 ? (\n                  <li>Three players are {redTeam}s</li>\n                ) : (\n                  <li>Four players are {redTeam}s</li>\n                )}\n                <li>\n                  {capitalize(redTeamLeader)} doesn't know who the {redTeam}s are\n                </li>\n                {numPlayers >= 9 && (\n                  <li>\n                    After the 1st {redTeam} policy is enacted, the {theme.presidentTitle}{' '}\n                    investigates a player's team membership\n                  </li>\n                )}\n                <li>\n                  After the 2nd {redTeam} policy is enacted, the {theme.presidentTitle}{' '}\n                  investigates a player's team membership\n                </li>\n                <li>\n                  After the 3nd {redTeam} policy is enacted, the {theme.presidentTitle} chooses the\n                  next {theme.presidentTitle} (this is a special session, the order of succession\n                  reverts back to normal afterwards)\n                </li>\n              </>\n            )}\n            <li>\n              After the 4th {redTeam} policy is enacted, the {theme.presidentTitle} must eliminate\n              a player\n            </li>\n            <li>\n              After the 5th {redTeam} policy is enacted, the {theme.presidentTitle} must eliminate\n              a player, and the veto power is unlocked\n            </li>\n            <li>\n              The policy deck contains 11 {redTeam} and 6 {blueTeam} policies\n            </li>\n            <li>\n              After three failed attempts to form a government, the top policy card from the deck\n              is automatically enacted. No special events are triggered by this policy.\n            </li>\n          </ul>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default SpecialRulesModal\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { get, capitalize } from 'lodash'\nimport { withRouter } from 'react-router-dom'\nimport PlayerList from './PlayerList'\nimport Government from './Government'\nimport EventList from './EventList'\nimport RoleModal from './RoleModal'\nimport RoleReveal from './RoleReveal'\nimport ChoosePolicies from './ChoosePolicies'\nimport GameStatus from './GameStatus'\nimport ActionBar from './ActionBar'\nimport { updateGame, refreshPolicies, assignRoles, createPolicies, isGameOver } from './utils'\nimport SpecialRulesModal from './SpecialRulesModal'\nimport theme from './theme'\n\nconst { redTeamLeader } = theme\n\nfunction App(props) {\n  const { game, gameRef, hosting = false } = props\n  const [name, setName] = useState(props.name || '')\n  const [president, setPresident] = useState(null)\n  const [chancellor, setChancellor] = useState(null)\n  const [viewingIdentity, setViewingIdentity] = useState(false)\n  const [chosenPlayer, setChosenPlayer] = useState(null)\n\n  const handleChoosePlayer = (p) => {\n    setChosenPlayer(p)\n    setViewingIdentity(true)\n    const newGame = produce(game, (draft) => {\n      draft.events.push(`${name} investigated ${p}'s membership`)\n      draft.presidentShouldInvestigate = false\n    })\n    updateGame(gameRef, newGame)\n  }\n\n  const handleStart = () => {\n    if (game.players.length < 5) {\n      console.log('Need more players')\n      return\n    }\n    const roles = assignRoles(game)\n    const event = `Game has started`\n\n    const newGame = produce(game, (draft) => {\n      draft.roles = roles\n      draft.policies = createPolicies()\n      draft.started = true\n      draft.events.push(event)\n    })\n    updateGame(gameRef, newGame)\n  }\n\n  const dismissReveal = () => {\n    console.log('reveal dismissed!')\n    setViewingIdentity(false)\n    setChosenPlayer(false)\n  }\n\n  const setGovernment = (approved = true) => {\n    if (!president || !chancellor) {\n      console.log('set pres & chan')\n      return\n    }\n    let event\n    let newGame\n    if (approved) {\n      event = `New government approved. ${theme.presidentTitle}: ${president}, ${theme.chancellorTitle}: ${chancellor}`\n      newGame = produce(game, (draft) => {\n        let tempPolicies = game.policies\n        if (game.policies < 3) {\n          tempPolicies = refreshPolicies(game)\n          draft.discards = []\n        }\n        draft.government = {\n          president: president,\n          chancellor: chancellor,\n        }\n        draft.policyChoices = tempPolicies.slice(0, 3)\n        draft.policies = tempPolicies.slice(3)\n        draft.events.push(event)\n        draft.presidentHasChosen = false\n        draft.presidentRejectedVeto = false\n        draft.chancellorHasVetoed = false\n        draft.governmentApproved = true\n      })\n    } else {\n      event = `Government rejected. ${theme.presidentTitle}: ${president}, ${theme.chancellorTitle}: ${chancellor}`\n      setPresident(null)\n      setChancellor(null)\n      newGame = produce(game, (draft) => {\n        draft.events.push(event)\n      })\n    }\n    updateGame(gameRef, newGame)\n  }\n\n  const handlePlayerClick = (playerName) => {\n    if (president !== playerName && chancellor !== playerName) {\n      setPresident(playerName)\n      return\n    }\n    if (president === playerName) {\n      setPresident(null)\n      setChancellor(playerName)\n      return\n    }\n    if (chancellor === playerName) {\n      setChancellor(null)\n      return\n    }\n  }\n\n  if (!game.started) {\n    return (\n      <div className=\"container\">\n        <PlayerList game={game} playerName={name} onPlayerClick={handlePlayerClick} />\n        {hosting && (\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <button className=\"btn btn-primary\" onClick={handleStart}>\n                Start Game\n              </button>\n            </div>\n          </div>\n        )}\n        <hr />\n        <EventList game={game} />\n      </div>\n    )\n  }\n\n  const wasLastPresident = get(game, 'lastPresident') === name\n  const gameOver = isGameOver(game)\n\n  if (viewingIdentity) {\n    return <RoleReveal game={game} playerName={chosenPlayer} handleOkay={dismissReveal} />\n  }\n\n  if (game.presidentShouldInvestigate && wasLastPresident) {\n    return (\n      <>\n        <PlayerList\n          headline={'Choose a player to investigate'}\n          game={game}\n          playerName={name}\n          onPlayerClick={handleChoosePlayer}\n        />\n      </>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"headline\">Secret {capitalize(redTeamLeader)}</h2>\n      <RoleModal game={game} playerName={name} />\n      <SpecialRulesModal game={game} />\n      <GameStatus game={game} />\n\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <p>\n            Your name:\n            <input\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value)\n              }}\n            />\n          </p>\n        </div>\n      </div>\n      <ChoosePolicies game={game} playerName={name} gameRef={gameRef} />\n\n      <PlayerList\n        game={game}\n        playerName={name}\n        onPlayerClick={handlePlayerClick}\n        showRoles={gameOver}\n      />\n      <Government\n        game={game}\n        president={president}\n        chancellor={chancellor}\n        showPotentialGovernment={hosting}\n      />\n      <div className=\"row mt-3\">\n        {!game.governmentApproved && hosting && (\n          <>\n            <div className=\"col-4 col-md-3\">\n              <button className=\"btn btn-secondary\" onClick={setGovernment}>\n                Approve Government\n              </button>\n            </div>\n            <div className=\"col-4 col-md-3\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setGovernment(false)\n                }}\n              >\n                Reject Government\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n      {hosting && <ActionBar game={game} gameRef={gameRef} />}\n      <hr />\n      <EventList game={game} show={6} />\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport words from './data/short-got.json'\nimport { random, capitalize } from 'lodash'\nimport { withRouter } from 'react-router-dom'\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firestore from './firestore'\nimport { updateGame } from './utils'\nimport theme from './theme'\nimport App from './App'\n\nconst { redTeamLeader } = theme\n\nlet testPlayers\nif (process.env.NODE_ENV === 'production') {\n  testPlayers = []\n} else {\n  testPlayers = [\n    'adam',\n    'cindy',\n    'david',\n    'edgar',\n    'fred',\n    // 'gary', 'helen', 'igor'\n  ]\n}\n\nconst defaultGame = {\n  players: testPlayers,\n  roles: {},\n  started: false,\n  host: null,\n  policies: [],\n  discards: [],\n  government: {\n    president: null,\n    chancellor: null,\n  },\n  governmentApproved: false,\n  events: [],\n  presidentHasChosen: false,\n  policyChoices: [],\n  enactedPolicies: [],\n  gameOver: false,\n  presidentShouldInvestigate: false,\n  presidentShouldKill: false,\n  vetoAvailable: false,\n  chancellorHasVetoed: false,\n  presidentRejectedVeto: false,\n  lastPresident: null,\n  lastChancellor: null,\n}\n\nconst randomChoice = (arr) => {\n  return arr[random(0, arr.length - 1)]\n}\n\nfunction Main(props) {\n  const savedName =\n    process.env.NODE_ENV === 'production' ? localStorage.getItem('playerName') || '' : 'testhost'\n\n  const [game, setGame] = useState(props.game || defaultGame)\n  const [gameCode, setGameCode] = useState(localStorage.getItem('gameCode') || '')\n  const [gameRef, setGameRef] = useState(props.gameRef || null)\n  const [name, setName] = useState(savedName)\n  const [hosting, setHosting] = useState(false)\n  const [submitted, setSubmitted] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setSubmitted(true)\n    const newGame = produce(game, (draft) => {\n      draft.players.push(name)\n    })\n    setGame(newGame)\n  }\n\n  const handleHosting = async (e) => {\n    e.preventDefault()\n    localStorage.setItem('gameCode', gameCode)\n    console.log('hosting!', gameCode)\n    setHosting(true)\n    let gRef = await firestore.collection('hgames').doc(gameCode)\n    setGameRef(gRef)\n    gRef.onSnapshot((doc) => {\n      const gameData = doc.data()\n      setGame(gameData)\n    })\n    gRef.update({\n      host: name,\n      lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n  }\n\n  const handleCreateGame = async () => {\n    console.log('create game!')\n    const wordCode = randomChoice(words)\n    setGameCode(wordCode)\n    const event = `Game created. Code: ${wordCode}`\n    localStorage.setItem('gameCode', wordCode)\n    const newGame = produce(game, (draft) => {\n      draft.code = wordCode\n      draft.host = name\n      draft.events.push(event)\n    })\n    let gRef = await firestore.collection('hgames').doc(wordCode)\n\n    setGameRef(gRef)\n    gRef.onSnapshot((doc) => {\n      setGame(doc.data())\n    })\n    updateGame(gRef, newGame)\n    setHosting(true)\n  }\n\n  const handleJoin = (e) => {\n    e.preventDefault()\n    props.history.push(`/g/${gameCode}`)\n    console.log(props.location)\n  }\n\n  if (!game.started && !game.code) {\n    return (\n      <div className=\"container\">\n        <h2>Secret {capitalize(redTeamLeader)}</h2>\n        <div className=\"row mt-3\">\n          <div className=\"col-3\">Take Over: </div>\n          <div className=\"col\">\n            <form onSubmit={handleHosting}>\n              <input\n                value={gameCode}\n                onChange={(e) => {\n                  setGameCode(e.target.value)\n                }}\n              />\n              <input type=\"submit\" />\n            </form>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-3\">Join: </div>\n          <div className=\"col\">\n            <form onSubmit={handleJoin}>\n              <input\n                value={gameCode}\n                onChange={(e) => {\n                  setGameCode(e.target.value)\n                }}\n              />\n              <input type=\"submit\" />\n            </form>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-3\">Create:</div>\n          <div className=\"col\">\n            {!submitted ? (\n              <form onSubmit={handleSubmit}>\n                <input\n                  value={name}\n                  onChange={(e) => {\n                    setName(e.target.value)\n                  }}\n                />\n                <input type=\"submit\" />\n              </form>\n            ) : (\n              <>\n                <p>Your name: {name}</p>\n                <button onClick={handleCreateGame}>Create Game</button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return <App game={game} gameRef={gameRef} name={name} hosting={hosting} />\n}\n\nexport default withRouter(Main)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { get } from 'lodash'\nimport produce from 'immer'\nimport firestore from './firestore'\nimport { updateGame } from './utils'\nimport App from './App'\n\nfunction Game(props) {\n  const [name, setName] = useState(localStorage.getItem('playerName') || '')\n  const [game, setGame] = useState(null)\n  const [gameRef, setGameRef] = useState(null)\n  const code = get(props, 'match.params.code', null)\n  const [submitted, setSubmitted] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('submit prevent')\n    setSubmitted(true)\n    const { players } = game\n    if (players.includes(name)) {\n      console.log('name already registered')\n      return\n    }\n    if (game.started) {\n      console.log('Game already started!')\n      return\n    }\n    const newGame = produce(game, (draft) => {\n      draft.players.push(name)\n    })\n    localStorage.setItem('playerName', name)\n\n    updateGame(gameRef, newGame)\n  }\n\n  useEffect(() => {\n    const register = async () => {\n      const gRef = await firestore.collection('hgames').doc(code)\n      setGameRef(gRef)\n      gRef.onSnapshot((doc) => {\n        const gameData = doc.data()\n        setGame(gameData)\n      })\n    }\n    if (code !== null) {\n      register()\n    }\n    const playerName = localStorage.getItem('playerName')\n    if (playerName !== null) {\n      setName(playerName)\n    }\n  }, [code])\n\n  if (game === null) {\n    return null\n  }\n\n  if (!game.players.includes(name)) {\n    return (\n      <div className=\"container\">\n        <h2>Name not found!</h2>\n        {!submitted ? (\n          <form onSubmit={handleSubmit}>\n            <input\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value)\n              }}\n            />\n            <input type=\"submit\" />\n          </form>\n        ) : (\n          <div className=\"row mt-3\">\n            <p>You are: {name}</p>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  return <App game={game} gameRef={gameRef} name={name} />\n}\n\nexport default withRouter(Game)\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './Main'\nimport Game from './Game'\n\nfunction Routes() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route path=\"/g/:code\">\n            <Game />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './styles/index.scss'\nimport Routes from './Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}