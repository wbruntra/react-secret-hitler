{"version":3,"sources":["assets/Liberal.JPG","assets/Fascist.JPG","assets/liberal-card-space.JPG","assets/liberal-card-enact.JPG","assets/liberal-card-win.JPG","assets/fascist-card-space.JPG","assets/fascist-card-enact.JPG","assets/fascist-card-win.JPG","firebaseConfig.js","firestore.js","theme.js","utils.js","PlayerList.js","Government.js","EventList.js","RoleModal.js","RoleReveal.js","DisplayPolicies.js","SimpleOverlay.js","ChoosePolicies.js","GameStatus.js","ActionBar.js","SpecialRulesModal.js","App.js","defaultGame.js","Main.js","Game.js","Routes.js","index.js"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","firestore","theme","blueTeam","redTeam","redTeamLeader","presidentTitle","chancellorTitle","RED","BLUE","updateGame","gameRef","newGame","set","lastUpdate","FieldValue","serverTimestamp","countPolicies","game","liberalPolicies","enactedPolicies","filter","p","liberal","length","fascist","identifyHitler","roles","players","i","hitlerIsChancellor","hitlerPlayer","get","refreshPolicies","shuffle","discards","policies","getRoleName","role","defaultTheme","isGameOver","gameOver","counts","governmentApproved","getThemedPolicyName","policy","PlayerList","playerName","headline","onPlayerClick","showRoles","clickable","government","president","chancellor","className","map","name","key","onClick","Government","showPotentialGovernment","EventList","show","events","useLocation","useState","linkCopied","setLinkCopied","displayEvent","e","startsWith","linkURL","window","location","href","code","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout","copyToClipboard","shownEvents","slice","RoleModal","autoReveal","onHide","setShow","handleClose","roleName","Modal","Header","closeButton","Title","Body","alt","src","LiberalCardImg","FascistCardImg","capitalize","r","getFascists","join","Footer","Button","variant","RoleReveal","team","getRoleTeam","DisplayPolicies","onPolicyClick","chosen","withChecks","cardImg","SimpleOverlay","children","title","ChoosePolicies","resetChosen","Array","fill","policyChoices","setChosen","vetoChoice","accept","produce","draft","event","presidentHasChosen","chancellorHasVetoed","push","presidentRejectedVeto","console","log","getPolicies","job","type","idx","newChosen","togglePolicy","newPolicyChoices","unchosen","newPolicy","themedPolicyName","lastPresident","lastChancellor","confirmChoice","PolicySpace","img","GameStatus","endDeclaration","_","LiberalEnactedImage","LiberalSpaceImage","LiberalCardWin","FascistEnactedImage","FascistSpaceImage","FascistCardWin","ActionBar","hosting","confirmationNeeded","setConfirmationNeeded","viewing","setViewing","setDoneViewing","preparedState","setPreparedState","started","confirmAction","bool","tempPolicies","enactTopPolicy","presidentShouldViewPolicies","presidentShouldInvestigate","SpecialRulesModal","numPlayers","size","App","props","setPresident","setChancellor","viewingIdentity","setViewingIdentity","chosenPlayer","setChosenPlayer","setError","handleStart","numLiberals","Math","ceil","randomRoles","result","forEach","assignRoles","L","F","createPolicies","setGovernment","approved","handlePlayerClick","enoughPlayers","disabled","wasLastPresident","process","defaultGame","host","presidentShouldKill","Main","savedName","localStorage","getItem","setGame","nameConfirmed","setNameConfirmed","gameCode","setGameCode","setGameRef","setName","setHosting","history","useHistory","handleHosting","a","preventDefault","setItem","collection","doc","gRef","onSnapshot","gameData","data","update","handleCreateGame","wordCode","arr","words","random","autoFocus","onChange","target","onSubmit","Game","setLoaded","submitted","setSubmitted","useEffect","register","includes","Routes","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.885939a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Liberal.5179a2ef.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Fascist.ed402502.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-space.f5c7314a.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-enact.5179a2ef.JPG\";","module.exports = __webpack_public_path__ + \"static/media/liberal-card-win.de286c5f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-space.61fe29af.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-enact.ed402502.JPG\";","module.exports = __webpack_public_path__ + \"static/media/fascist-card-win.84f89324.JPG\";","const firebaseConfig = {\n  apiKey: 'AIzaSyAvSp91vcvkgt9RYafRIgY8noH4NSX0P0g',\n  authDomain: 'isthisprime.firebaseapp.com',\n  databaseURL: 'https://isthisprime.firebaseio.com',\n  projectId: 'isthisprime',\n  storageBucket: 'isthisprime.appspot.com',\n  messagingSenderId: '522572340456',\n  appId: '1:522572340456:web:3f0afa40b9cb7d8550bd5d',\n}\n\nexport default firebaseConfig\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firebaseConfig from './firebaseConfig'\nimport 'firebase/auth'\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics()\n\nconst firestore = firebase.firestore()\n\nexport default firestore\n","const theme = {\n  blueTeam: 'Order of Phoenix',\n  redTeam: 'Death-Eater',\n  redTeamLeader: 'Voldemort',\n  presidentTitle: 'Minister for Magic',\n  chancellorTitle: 'Chief Warlock',\n  RED: 'Wizard Purity',\n  BLUE: 'Muggle Protection',\n}\n\nexport default theme\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { get, shuffle, map, filter } from 'lodash'\nimport defaultTheme from './theme'\n\nexport const updateGame = (gameRef, newGame) => {\n  gameRef.set({\n    ...newGame,\n    lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n  })\n}\n\nexport const countPolicies = (game) => {\n  const liberalPolicies = game.enactedPolicies.filter((p) => p === 'BLUE')\n  return {\n    liberal: liberalPolicies.length,\n    fascist: game.enactedPolicies.length - liberalPolicies.length,\n  }\n}\n\nexport const identifyHitler = (game) => {\n  const roles = game.roles\n  const players = game.players\n  let role\n  for (let i = 0; i < players.length; i++) {\n    role = roles[players[i]]\n    if (role === 'redLeader') {\n      return players[i]\n    }\n  }\n}\n\nexport const hitlerIsChancellor = (game) => {\n  const hitlerPlayer = identifyHitler(game)\n  const currentChancellor = get(game, 'government.chancellor')\n  return currentChancellor === hitlerPlayer\n}\n\nexport const hitlerAsChancellorWin = (game) => {\n  const counts = countPolicies(game)\n  const hitlerPlayer = identifyHitler(game)\n  const currentChancellor = get(game, 'government.chancellor')\n  if (counts.fascist < 3 || !game.governmentApproved || currentChancellor !== hitlerPlayer) {\n    return false\n  }\n  return true\n}\n\nexport const refreshPolicies = (game) => {\n  return shuffle([...game.discards, ...game.policies])\n}\n\nexport const getRoleName = (role, theme = defaultTheme) => {\n  const { blueTeam, redTeam, redTeamLeader } = theme\n  if (role === 'blue') {\n    return blueTeam\n  }\n  if (role === 'red') {\n    return redTeam\n  }\n  if (role === 'redLeader') {\n    return redTeamLeader\n  }\n}\n\nexport const getRoleTeam = (role, theme = defaultTheme) => {\n  const { blueTeam, redTeam } = theme\n  if (role === 'blue') {\n    return blueTeam\n  }\n  return redTeam\n}\n\nexport const getFascists = (game) => {\n  const { roles } = game\n  const fascists = filter(\n    map(roles, (r, name) => {\n      // console.log(r, name)\n      const result = r !== 'blue' ? name : null\n      return result\n    }),\n  )\n  return fascists\n}\n\nexport const createPolicies = () => {\n  const L = Array(6).fill('BLUE')\n  const F = Array(11).fill('RED')\n  const policies = [...L, ...F]\n  return shuffle(policies)\n}\n\nexport const assignRoles = (game) => {\n  const { players } = game\n  const numLiberals = Math.ceil(0.5 + players.length / 2)\n  let roles = Array(numLiberals).fill('blue')\n  roles.push('redLeader')\n  while (roles.length < players.length) {\n    roles.push('red')\n  }\n  const randomRoles = shuffle(roles)\n  const result = {}\n  players.forEach((p, i) => {\n    result[p] = randomRoles[i]\n  })\n  return result\n}\n\nexport const isGameOver = (game) => {\n  if (game.gameOver) {\n    return true\n  }\n\n  const counts = countPolicies(game)\n\n  if (counts.fascist === 6) {\n    return true\n  }\n\n  if (counts.liberal === 5) {\n    return true\n  }\n\n  if (counts.fascist >= 3 && game.governmentApproved && hitlerIsChancellor(game)) {\n    return true\n  }\n  return false\n}\n\nexport const getThemedPolicyName = (policy, theme = defaultTheme) => {\n  return theme[policy]\n}\n","import React from 'react'\nimport theme from './theme'\nimport { getRoleName } from './utils'\n\nfunction PlayerList({\n  game,\n  playerName,\n  headline = 'Players',\n  onPlayerClick = () => {},\n  showRoles = false,\n  clickable = false,\n}) {\n  if (!game) {\n    return null\n  }\n  let { president, chancellor } = game.government\n\n  return (\n    <div className=\"section mt-3\">\n      <h2 className=\"text-center\">{headline}</h2>\n      <div className=\"row\">\n        {game.players.map((name, i) => {\n          const role = getRoleName(game.roles[name])\n\n          return (\n            <div\n              className={`col-4 col-md-3 my-3 player-card ${clickable ? 'clickable' : ''}`}\n              key={`player-${i}`}\n            >\n              <div className=\"card h-100\">\n                <div\n                  className={`py-3 text-center ${name === president ? 'president' : ''} ${\n                    name === chancellor ? 'chancellor' : ''\n                  } `}\n                  onClick={() => {\n                    onPlayerClick(name)\n                  }}\n                >\n                  <div>\n                    <i className=\"fas fa-user\"></i>\n                  </div>\n                  <p>\n                    {name} {name === playerName ? '(you)' : ''}\n                  </p>\n                  {name === president && <p>{theme.presidentTitle}</p>}\n                  {name === chancellor && <p>{theme.chancellorTitle}</p>}\n                  {showRoles && (\n                    <p className={`${game.roles[name] === 'blue' ? 'blue' : 'red'}`}>{role}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default PlayerList\n","import React from 'react'\nimport theme from './theme'\n\nfunction Government({ game, showPotentialGovernment = false, president = '', chancellor = '' }) {\n  if (!showPotentialGovernment) {\n    return null\n  }\n  return (\n    <div className=\"row mt-3\">\n      <div className=\"col-8\">\n        <div className=\"row\">\n          <div className=\"col-5\">Proposed {theme.presidentTitle}:</div>\n          <div className=\"col-6\">{president}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-5\">Proposed {theme.chancellorTitle}:</div>\n          <div className=\"col-6\">{chancellor}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Government\n","import React, { useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nfunction EventList({ game, show = 0 }) {\n  const location = useLocation()\n  const { events } = game\n  const [linkCopied, setLinkCopied] = useState(false)\n  if (events.length === 0) {\n    return null\n  }\n\n  const copyToClipboard = (str) => {\n    const el = document.createElement('textarea')\n    el.value = str\n    document.body.appendChild(el)\n    el.select()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n    setLinkCopied(true)\n    window.setTimeout(() => {\n      setLinkCopied(false)\n    }, 3500)\n  }\n\n  const displayEvent = (e) => {\n    if (e.startsWith('Game created')) {\n      const linkURL = `${window.location.href}g/${game.code}`\n      return (\n        <>\n          {e}\n          <span className=\"ml-3\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                copyToClipboard(linkURL)\n              }}\n            >\n              {linkCopied ? 'COPIED!' : 'Copy Link to Clipboard'}\n            </button>\n          </span>\n        </>\n      )\n    }\n    return e\n  }\n\n  const shownEvents = show > 0 ? events.slice(-1 * show) : [...events]\n\n  return (\n    <>\n      <h3 className=\"headline text-center\">Events</h3>\n      <ul className=\"list-group event-list\">\n        {shownEvents.map((e, i) => {\n          return (\n            <li className=\"list-group-item\" key={`event-${i}`}>\n              {displayEvent(e)}\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n\nexport default EventList\n","import React, { useState } from 'react'\nimport { capitalize } from 'lodash'\nimport { identifyHitler, getFascists, getRoleName } from './utils'\nimport LiberalCardImg from './assets/Liberal.JPG'\nimport FascistCardImg from './assets/Fascist.JPG'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport theme from './theme'\n\nfunction RoleModal({ game, playerName, autoReveal = false, onHide = () => {} }) {\n  const [show, setShow] = useState(autoReveal === true)\n\n  const handleClose = () => {\n    onHide()\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n  const { roles } = game\n  const hitlerPlayer = identifyHitler(game)\n  const role = roles[playerName]\n  const { redTeam, redTeamLeader } = theme\n  const roleName = getRoleName(role, theme)\n\n  return (\n    <>\n      <button className=\"btn btn-primary ml-3\" onClick={handleShow}>\n        Reveal Secret Role\n      </button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Your Secret Role: {roleName} </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row justify-content-center role-reveal\">\n            <div className=\"col-3\">\n              {role === 'blue' ? (\n                <img alt=\"blue card\" src={LiberalCardImg} />\n              ) : (\n                <img alt=\"red card\" src={FascistCardImg} />\n              )}\n            </div>\n          </div>\n          {(role === 'red' || (role === redTeamLeader && game.players.length < 7)) && (\n            <>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <p>\n                    {capitalize(redTeamLeader)} is: {hitlerPlayer}\n                  </p>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <p>\n                    All {redTeam}s: {getFascists(game).join(', ')}\n                  </p>\n                </div>\n              </div>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default RoleModal\n","import React from 'react'\nimport { getRoleTeam } from './utils'\n\nfunction RoleReveal({ game, playerName }) {\n  const { roles } = game\n  const role = roles[playerName]\n  const team = getRoleTeam(role)\n\n  return (\n    <div className=\"row justify-content-center p-4\">\n      <div className=\"col-8\">\n        <div className=\"row\">\n          <div className=\"col\">Player: {playerName}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">Affiliation: {team}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RoleReveal\n","import React from 'react'\nimport LiberalCardImg from './assets/Liberal.JPG'\nimport FascistCardImg from './assets/Fascist.JPG'\n\nfunction DisplayPolicies({ policies, onPolicyClick = () => {}, chosen = [], withChecks = true }) {\n  return (\n    <div className=\"row justify-content-center\">\n      {policies.map((policy, i) => {\n        const cardImg = policy === 'BLUE' ? LiberalCardImg : FascistCardImg\n\n        return (\n          <div key={`policy-${i}`} className=\"col-2 text-center\">\n            <div className=\"card py-3 policy-space\" onClick={() => onPolicyClick(i)}>\n              <img className=\"card-img-top\" src={cardImg} alt=\"policy choice\" />\n              {withChecks && (\n                <div className=\"mt-2\">\n                  {chosen[i] ? (\n                    <i className=\"fas fa-check green\"></i>\n                  ) : (\n                    <i className=\"fas fa-times red\"></i>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DisplayPolicies\n","import React, { useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\n\nfunction SimpleOverlay({ children, title = 'Info', autoReveal = true, onHide = () => {} }) {\n  const [show, setShow] = useState(autoReveal === true)\n\n  const handleClose = () => {\n    onHide()\n    if (process.env.NODE_ENV !== 'production') {\n      setShow(false)\n    }\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default SimpleOverlay\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { capitalize, get } from 'lodash'\nimport { updateGame, countPolicies, getThemedPolicyName } from './utils'\nimport theme from './theme'\nimport DisplayPolicies from './DisplayPolicies'\nimport SimpleOverlay from './SimpleOverlay'\n\nfunction ChoosePolicies({ game, playerName, gameRef }) {\n  const resetChosen = () => {\n    return Array(3).fill(false)\n  }\n\n  const policies = game.policyChoices\n  const [chosen, setChosen] = useState(resetChosen())\n  const getJob = () => {\n    const pres = get(game, 'government.president')\n    if (pres === playerName) {\n      return theme.presidentTitle\n    }\n    const chan = get(game, 'government.chancellor')\n    if (chan === playerName) {\n      return theme.chancellorTitle\n    }\n    return null\n  }\n\n  const gameReducer = (action) =>\n    produce(game, (draft) => {\n      let event\n      switch (action.type) {\n        case 'veto':\n          draft.presidentHasChosen = false\n          if (game.chancellorHasVetoed) {\n            draft.discards.push(...game.policyChoices)\n            draft.policyChoices = []\n            event = `${capitalize(theme.presidentTitle)} has agreed to veto. Government fails!`\n            draft.governmentApproved = false\n            draft.government = {\n              president: '',\n              chancellor: '',\n            }\n          } else {\n            event = `${theme.chancellorTitle} has proposed a veto`\n            draft.chancellorHasVetoed = true\n          }\n          draft.events.push(event)\n          return\n        case 'confirm':\n          const newPolicyChoices = getPolicies()\n          const unchosen = policies.filter((p, i) => {\n            return !chosen[i]\n          })[0]\n          draft.discards.push(unchosen)\n          if (newPolicyChoices.length === 1) {\n            const newPolicy = newPolicyChoices[0]\n            event = `A new policy has been chosen: ${newPolicy}`\n            draft.enactedPolicies.push(newPolicy)\n            draft.policyChoices = []\n            draft.presidentHasChosen = false\n            draft.governmentApproved = false\n            draft.government = {\n              president: '',\n              chancellor: '',\n            }\n          } else {\n            draft.presidentHasChosen = true\n            draft.policyChoices = newPolicyChoices\n          }\n          draft.events.push(event)\n          return\n      }\n    })\n\n  const vetoChoice = (accept = true) => {\n    const newGame = produce(game, (draft) => {\n      let event\n      draft.presidentHasChosen = false\n      if (!accept) {\n        draft.presidentRejectedVeto = true\n        event = `${theme.presidentTitle} has rejected the veto`\n      } else {\n        if (game.chancellorHasVetoed) {\n          draft.discards.push(...game.policyChoices)\n          draft.policyChoices = []\n          event = `${theme.presidentTitle} has agreed to veto`\n          draft.governmentApproved = false\n          draft.chancellorHasVetoed = false\n          draft.presidentHasChosen = false\n          draft.government = {\n            president: '',\n            chancellor: '',\n          }\n        } else {\n          event = `${theme.chancellorTitle} has proposed a veto`\n          draft.chancellorHasVetoed = true\n        }\n      }\n      draft.events.push(event)\n    })\n    console.log(newGame)\n\n    updateGame(gameRef, newGame)\n  }\n\n  const confirmChoice = () => {\n    const newPolicyChoices = getPolicies()\n    const unchosen = policies.filter((p, i) => {\n      return !chosen[i]\n    })[0]\n    const newGame = produce(game, (draft) => {\n      draft.discards.push(unchosen)\n      if (newPolicyChoices.length === 1) {\n        const newPolicy = newPolicyChoices[0]\n        const themedPolicyName = getThemedPolicyName(newPolicy)\n        const event = `A new policy has been chosen: ${themedPolicyName}`\n        draft.enactedPolicies.push(newPolicy)\n        draft.policyChoices = []\n        draft.events.push(event)\n        draft.presidentHasChosen = false\n        draft.governmentApproved = false\n        draft.chancellorHasVetoed = false\n        draft.presidentRejectedVeto = false\n        draft.government = {\n          president: '',\n          chancellor: '',\n        }\n        draft.lastPresident = game.government.president\n        draft.lastChancellor = game.government.chancellor\n      } else {\n        draft.presidentHasChosen = true\n        draft.policyChoices = newPolicyChoices\n      }\n    })\n\n    updateGame(gameRef, newGame)\n    setChosen(resetChosen())\n  }\n\n  const togglePolicy = (idx) => {\n    const newChosen = produce(chosen, (draft) => {\n      draft[idx] = !draft[idx]\n    })\n    setChosen(newChosen)\n  }\n\n  const getPolicies = () => {\n    return policies.filter((p, i) => {\n      return chosen[i]\n    })\n  }\n\n  if (!game.governmentApproved) {\n    return null\n  }\n\n  const job = getJob()\n\n  if (!job) {\n    if (process.env.NODE_ENV !== 'production') {\n      return 'Waiting on government to choose a new policy...'\n    }\n    return (\n      <SimpleOverlay title=\"Government in Session\">\n        <p>Waiting on government to choose a new policy...</p>\n      </SimpleOverlay>\n    )\n  }\n\n  if (\n    job === theme.presidentTitle &&\n    !game.chancellorHasVetoed &&\n    game.policyChoices.length === 2\n  ) {\n    return (\n      <SimpleOverlay title=\"Government in Session\">\n        <p>Waiting on {theme.chancellorTitle}</p>\n      </SimpleOverlay>\n    )\n  }\n\n  if (job === theme.presidentTitle && game.presidentRejectedVeto) {\n    return (\n      <SimpleOverlay title=\"Government in Session\">\n        <p>Rejected veto. Waiting on {theme.chancellorTitle}</p>\n      </SimpleOverlay>\n    )\n  }\n\n  if (job === theme.chancellorTitle && game.chancellorHasVetoed && !game.presidentRejectedVeto) {\n    return `Veto proposed. Waiting on ${theme.presidentTitle} to decide.`\n  }\n\n  if (\n    job === theme.chancellorTitle &&\n    !game.chancellorHasVetoed &&\n    game.policyChoices.length === 3\n  ) {\n    return (\n      <SimpleOverlay title=\"Government in Session\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <p>You are the {job}</p>\n            <p>Waiting on {theme.presidentTitle} to choose</p>\n          </div>\n        </div>\n      </SimpleOverlay>\n    )\n  }\n\n  const counts = countPolicies(game)\n\n  if (job === theme.presidentTitle && game.chancellorHasVetoed) {\n    return (\n      <>\n        <SimpleOverlay title=\"Veto Proposed\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <p>{capitalize(theme.chancellorTitle)} wants to veto these policies. Agree?</p>\n            </div>\n          </div>\n          <DisplayPolicies\n            policies={game.policyChoices}\n            onPolicyClick={() => {}}\n            chosen={chosen}\n          />\n          <div className=\"row mt-3\">\n            <div className=\"col-4\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  vetoChoice()\n                }}\n              >\n                Agree to Veto\n              </button>\n            </div>\n            <div className=\"col-4\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                onClick={() => {\n                  vetoChoice(false)\n                }}\n              >\n                Reject Veto\n              </button>\n            </div>\n          </div>\n        </SimpleOverlay>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <SimpleOverlay title=\"Government in Session\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <p>\n              You are the {job}.{' '}\n              {job === theme.presidentTitle\n                ? 'Choose 2 policies to keep'\n                : 'Choose a policy to adopt'}\n            </p>\n            {game.presidentRejectedVeto && (\n              <p>The {theme.presidentTitle} rejected your veto. Choose a policy to enact</p>\n            )}\n          </div>\n        </div>\n        <DisplayPolicies\n          policies={game.policyChoices}\n          onPolicyClick={(i) => togglePolicy(i)}\n          chosen={chosen}\n        />\n        <div className=\"row mt-3\">\n          <div className=\"col\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => {\n                const confirmed = getPolicies()\n                if (confirmed.length === policies.length - 1) {\n                  confirmChoice(chosen)\n                }\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n          {counts.fascist === 5 && job === theme.chancellorTitle && !game.presidentRejectedVeto && (\n            <div className=\"col\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => {\n                  vetoChoice()\n                }}\n              >\n                Veto\n              </button>\n            </div>\n          )}\n        </div>\n      </SimpleOverlay>\n    </>\n  )\n}\n\nexport default ChoosePolicies\n","import React from 'react'\nimport { countPolicies, hitlerIsChancellor, isGameOver } from './utils'\nimport LiberalSpaceImage from './assets/liberal-card-space.JPG'\nimport LiberalEnactedImage from './assets/liberal-card-enact.JPG'\nimport LiberalCardWin from './assets/liberal-card-win.JPG'\nimport FascistSpaceImage from './assets/fascist-card-space.JPG'\nimport FascistEnactedImage from './assets/fascist-card-enact.JPG'\nimport FascistCardWin from './assets/fascist-card-win.JPG'\nimport { capitalize } from 'lodash'\nimport theme from './theme'\n\nfunction PolicySpace({ img }) {\n  return (\n    <div className=\"col-2 col-md-1\">\n      <div className=\"card py-2 policy-space\">\n        <img alt=\"policy card\" src={img} />\n      </div>\n    </div>\n  )\n}\n\nfunction GameStatus({ game }) {\n  const counts = countPolicies(game)\n  const { blueTeam, redTeam, redTeamLeader } = theme\n  const gameOver = isGameOver(game)\n\n  let endDeclaration\n  if (counts.fascist === 6) {\n    endDeclaration = <h1>{redTeam} wins with 6 Policies!</h1>\n  }\n\n  if (counts.liberal === 5) {\n    endDeclaration = <h1>{blueTeam} wins with 5 Policies!</h1>\n  }\n\n  if (counts.fascist >= 3 && game.governmentApproved && hitlerIsChancellor(game)) {\n    endDeclaration = (\n      <h1>\n        {redTeam} wins because {redTeamLeader} is {theme.chancellorTitle}!\n      </h1>\n    )\n  }\n\n  if (gameOver) {\n    return (\n      <div className=\"mt-3\">\n        {endDeclaration}\n        {/* <ul>\n          <li>{theme.blueTeam} Policies: {counts.liberal} </li>\n          <li>{theme.redTeam} Policies: {counts.fascist} </li>\n        </ul> */}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"row mt-3\">\n        <div className=\"col\">Policies Left in Deck: {game.policies.length}</div>\n        <div className=\"col\">Discarded: {game.discards.length} </div>\n      </div>\n      {gameOver && endDeclaration}\n      <div className=\"row mt-3\">\n        {Array(counts.liberal)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`libs-en-${i}`} img={LiberalEnactedImage} />\n          })}\n        {Array(4 - counts.liberal)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`libs-en-${i}`} img={LiberalSpaceImage} />\n          })}\n        <PolicySpace img={LiberalCardWin} />\n      </div>\n      <div className=\"row mt-4\">\n        {Array(counts.fascist)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`fasc-en-${i}`} img={FascistEnactedImage} />\n          })}\n        {Array(5 - counts.fascist)\n          .fill(true)\n          .map((_, i) => {\n            return <PolicySpace key={`fasc-${i}`} img={FascistSpaceImage} />\n          })}\n\n        <PolicySpace img={FascistCardWin} />\n      </div>\n    </>\n  )\n}\n\nexport default GameStatus\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { updateGame, refreshPolicies, getThemedPolicyName } from './utils'\nimport DisplayPolicies from './DisplayPolicies'\n\nfunction ActionBar({ game, gameRef, playerName = '', hosting = false }) {\n  const [confirmationNeeded, setConfirmationNeeded] = useState(false)\n  const [viewing, setViewing] = useState(false)\n  const [doneViewing, setDoneViewing] = useState(true)\n  const [preparedState, setPreparedState] = useState(null)\n\n  if (!game.started) {\n    return null\n  }\n\n  const confirmAction = (bool) => {\n    if (bool) {\n      updateGame(gameRef, preparedState)\n      if (viewing) {\n        setDoneViewing(false)\n      }\n    }\n    setPreparedState(null)\n    setViewing(false)\n    setConfirmationNeeded(false)\n  }\n\n  const enactTopPolicy = () => {\n    const newGame = produce(game, (draft) => {\n      let tempPolicies = game.policies\n      if (game.policies.length === 0) {\n        tempPolicies = refreshPolicies(game)\n        draft.discards = []\n      }\n      const newPolicy = tempPolicies[0]\n      const themedPolicyName = getThemedPolicyName(newPolicy)\n      const event = `Government in chaos! New policy enacted: ${themedPolicyName}`\n      draft.policies = tempPolicies.slice(1)\n      draft.enactedPolicies.push(newPolicy)\n      draft.events.push(event)\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  const viewTopPolicies = () => {\n    const newGame = produce(game, (draft) => {\n      let tempPolicies = game.policies\n      if (game.policies.length < 3) {\n        tempPolicies = refreshPolicies(game)\n        draft.discards = []\n      }\n      draft.presidentShouldViewPolicies = true\n      draft.policies = tempPolicies\n    })\n    setConfirmationNeeded(true)\n    setViewing(true)\n    setPreparedState(newGame)\n  }\n\n  const allowInvestigation = () => {\n    const newGame = produce(game, (draft) => {\n      draft.presidentShouldInvestigate = true\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  const endGame = () => {\n    const newGame = produce(game, (draft) => {\n      draft.gameOver = true\n    })\n    setConfirmationNeeded(true)\n    setPreparedState(newGame)\n  }\n\n  // if (playerName !== game.lastPresident && !doneViewing) {\n  //   return (\n  //     <DisplayPolicies\n  //       onPolicyClick={() => {\n  //         setDoneViewing(true)\n  //       }}\n  //       policies={game.policies.slice(0, 3)}\n  //     />\n  //   )\n  // }\n\n  return (\n    <>\n      {!confirmationNeeded ? (\n        <div className=\"row mt-3\">\n          <div className=\"col-6 col-md-3\">\n            <button\n              className=\"btn btn-warning\"\n              onClick={() => {\n                enactTopPolicy()\n              }}\n            >\n              Enact Top Policy\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={viewTopPolicies}>\n              View Top Policies\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={allowInvestigation}>\n              Allow Investigation\n            </button>\n          </div>\n          <div className=\"col-6 col-md-3\">\n            <button className=\"btn btn-warning\" onClick={endGame}>\n              End Game\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"row mt-3\">\n          <div className=\"col-4 col-md-3\">\n            <button\n              className=\"btn btn-danger mr-3\"\n              onClick={() => {\n                confirmAction(true)\n              }}\n            >\n              Confirm\n            </button>\n            <button\n              className=\"btn btn-info\"\n              onClick={() => {\n                confirmAction(false)\n              }}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ActionBar\n","import React, { useState } from 'react'\nimport { capitalize } from 'lodash'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport theme from './theme'\n\nfunction SpecialRulesModal({ game }) {\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => {\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const numPlayers = game.players.length\n\n  const { blueTeam, redTeam, redTeamLeader } = theme\n\n  return (\n    <>\n      <button className=\"btn btn-primary ml-3\" onClick={handleShow}>\n        Show Rules\n      </button>\n\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Rules for {numPlayers} players </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ul>\n            {numPlayers <= 6 && (\n              <>\n                <li>\n                  Two players (including {redTeamLeader}) are {redTeam}s\n                </li>\n                <li>\n                  {capitalize(redTeamLeader)} knows who the other {redTeam} is\n                </li>\n                <li>\n                  After the 3rd {redTeam} policy is enacted, the {theme.presidentTitle} will view\n                  the top three policy cards, then put them back without changing the order\n                </li>\n              </>\n            )}\n            {numPlayers >= 7 && (\n              <>\n                {numPlayers < 9 ? (\n                  <li>\n                    Three players (including {redTeamLeader}) are {redTeam}s\n                  </li>\n                ) : (\n                  <li>\n                    Four players (including {redTeamLeader}) are {redTeam}s\n                  </li>\n                )}\n                <li>\n                  {capitalize(redTeamLeader)} doesn't know who the other {redTeam}s are\n                </li>\n                {numPlayers >= 9 && (\n                  <li>\n                    After the 1st {redTeam} policy is enacted, the {theme.presidentTitle}{' '}\n                    investigates a player's team membership\n                  </li>\n                )}\n                <li>\n                  After the 2nd {redTeam} policy is enacted, the {theme.presidentTitle}{' '}\n                  investigates a player's team membership\n                </li>\n                <li>\n                  After the 3nd {redTeam} policy is enacted, the {theme.presidentTitle} chooses the\n                  next {theme.presidentTitle} (this is a special session, the order of succession\n                  reverts back to normal afterwards)\n                </li>\n              </>\n            )}\n            <li>\n              After the 4th {redTeam} policy is enacted, the {theme.presidentTitle} must eliminate\n              a player\n            </li>\n            <li>\n              After the 5th {redTeam} policy is enacted, the {theme.presidentTitle} must eliminate\n              a player, and the veto power is unlocked\n            </li>\n            <li>\n              The policy deck contains 11 {theme.RED} and 6 {theme.BLUE} policies\n            </li>\n            <li>\n              After three failed attempts to form a government, the top policy card from the deck\n              is automatically enacted. No special events are triggered by this policy.\n            </li>\n          </ul>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default SpecialRulesModal\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport { get, capitalize, update } from 'lodash'\nimport PlayerList from './PlayerList'\nimport Government from './Government'\nimport EventList from './EventList'\nimport RoleModal from './RoleModal'\nimport RoleReveal from './RoleReveal'\nimport ChoosePolicies from './ChoosePolicies'\nimport GameStatus from './GameStatus'\nimport ActionBar from './ActionBar'\nimport { updateGame, refreshPolicies, assignRoles, createPolicies, isGameOver } from './utils'\nimport SpecialRulesModal from './SpecialRulesModal'\nimport theme from './theme'\nimport DisplayPolicies from './DisplayPolicies'\nimport SimpleOverlay from './SimpleOverlay'\n\nconst { redTeamLeader } = theme\n\nfunction App(props) {\n  const { game, gameRef, hosting = false } = props\n  const [name, setName] = useState(props.name || '')\n  const [president, setPresident] = useState(null)\n  const [chancellor, setChancellor] = useState(null)\n  const [viewingIdentity, setViewingIdentity] = useState(false)\n  const [chosenPlayer, setChosenPlayer] = useState(null)\n  const [error, setError] = useState(null)\n\n  const handleChoosePlayer = (p) => {\n    setChosenPlayer(p)\n    setViewingIdentity(true)\n    const newGame = produce(game, (draft) => {\n      draft.events.push(`${name} investigated ${p}'s membership`)\n      draft.presidentShouldInvestigate = false\n    })\n    updateGame(gameRef, newGame)\n  }\n\n  const handleStart = () => {\n    if (game.players.length < 5) {\n      console.log('Need more players')\n      setError('Need more players')\n      window.setTimeout(() => {\n        setError(null)\n      }, 2500)\n      return\n    }\n    const roles = assignRoles(game)\n    const event = `Game has started`\n\n    const newGame = produce(game, (draft) => {\n      draft.roles = roles\n      draft.policies = createPolicies()\n      draft.started = true\n      draft.events.push(event)\n    })\n    updateGame(gameRef, newGame)\n  }\n\n  const dismissReveal = () => {\n    console.log('reveal dismissed!')\n    setViewingIdentity(false)\n    setChosenPlayer(false)\n  }\n\n  const setGovernment = (approved = true) => {\n    if (!president || !chancellor) {\n      console.log('set pres & chan')\n      return\n    }\n    let event\n    let newGame\n    if (approved) {\n      event = `New government approved. ${theme.presidentTitle}: ${president}, ${theme.chancellorTitle}: ${chancellor}`\n      newGame = produce(game, (draft) => {\n        let tempPolicies = game.policies\n        if (game.policies < 3) {\n          tempPolicies = refreshPolicies(game)\n          draft.discards = []\n        }\n        draft.government = {\n          president: president,\n          chancellor: chancellor,\n        }\n        draft.policyChoices = tempPolicies.slice(0, 3)\n        draft.policies = tempPolicies.slice(3)\n        draft.events.push(event)\n        draft.presidentHasChosen = false\n        draft.presidentRejectedVeto = false\n        draft.chancellorHasVetoed = false\n        draft.governmentApproved = true\n      })\n    } else {\n      event = `Government rejected. ${theme.presidentTitle}: ${president}, ${theme.chancellorTitle}: ${chancellor}`\n      setPresident(null)\n      setChancellor(null)\n      newGame = produce(game, (draft) => {\n        draft.events.push(event)\n      })\n    }\n    updateGame(gameRef, newGame)\n  }\n\n  const handlePlayerClick = (playerName) => {\n    if (president !== playerName && chancellor !== playerName) {\n      setPresident(playerName)\n      return\n    }\n    if (president === playerName) {\n      setPresident(null)\n      setChancellor(playerName)\n      return\n    }\n    if (chancellor === playerName) {\n      setChancellor(null)\n      return\n    }\n  }\n\n  if (!game.started) {\n    const enoughPlayers = game.players.length >= 5\n    return (\n      <div className=\"container\">\n        <PlayerList game={game} playerName={name} onPlayerClick={handlePlayerClick} />\n        {hosting && (\n          <div className=\"row mt-3\">\n            <div className=\"col\">\n              <button\n                className=\"btn btn-primary\"\n                disabled={!enoughPlayers}\n                onClick={() => {\n                  if (enoughPlayers) {\n                    handleStart()\n                  }\n                }}\n              >\n                Start Game\n              </button>\n              {!enoughPlayers && <span className=\"ml-4\">More players needed</span>}\n            </div>\n          </div>\n        )}\n        <hr />\n        <EventList game={game} />\n      </div>\n    )\n  }\n\n  const handleDismissPolicies = () => {\n    const newGame = produce(game, (draft) => {\n      draft.events.push(`${name} viewed the top policies`)\n      draft.presidentShouldViewPolicies = false\n    })\n    updateGame(gameRef, newGame)\n  }\n\n  const wasLastPresident = get(game, 'lastPresident') === name\n  const gameOver = isGameOver(game)\n\n  return (\n    <div className=\"container\">\n      {viewingIdentity && (\n        <SimpleOverlay title={'Presidential Investigation'} onHide={dismissReveal}>\n          <RoleReveal game={game} playerName={chosenPlayer} />\n        </SimpleOverlay>\n      )}\n      {game.presidentShouldViewPolicies && wasLastPresident && (\n        <SimpleOverlay title={'Policy Preview'} onHide={handleDismissPolicies}>\n          <DisplayPolicies policies={game.policies.slice(0, 3)} withChecks={false} />\n        </SimpleOverlay>\n      )}\n      {game.presidentShouldInvestigate && (\n        <SimpleOverlay title={'Presidential Investigation'}>\n          {wasLastPresident ? (\n            <PlayerList\n              headline={'Choose a player to investigate'}\n              game={game}\n              playerName={name}\n              onPlayerClick={handleChoosePlayer}\n              clickable={true}\n            />\n          ) : (\n            <p>Waiting on {theme.presidentTitle} to investigate a player</p>\n          )}\n        </SimpleOverlay>\n      )}\n\n      <h1 className=\"headline text-center mb-3\">Secret {capitalize(redTeamLeader)}</h1>\n      <RoleModal game={game} playerName={name} />\n      <SpecialRulesModal game={game} />\n      <GameStatus game={game} />\n\n      {process.env.NODE_ENV !== 'production' && (\n        <div className=\"row mt-3\">\n          <div className=\"col\">\n            <p>\n              Change Name?\n              <input\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value)\n                }}\n              />\n            </p>\n          </div>\n        </div>\n      )}\n      <ChoosePolicies game={game} playerName={name} gameRef={gameRef} />\n\n      <PlayerList\n        game={game}\n        playerName={name}\n        onPlayerClick={handlePlayerClick}\n        showRoles={gameOver}\n        clickable={hosting}\n      />\n      <Government\n        game={game}\n        president={president}\n        chancellor={chancellor}\n        showPotentialGovernment={hosting}\n      />\n      <div className=\"row mt-3\">\n        {!game.governmentApproved && hosting && (\n          <>\n            <div className=\"col-4 col-md-3\">\n              <button className=\"btn btn-secondary\" onClick={setGovernment}>\n                Approve Government\n              </button>\n            </div>\n            <div className=\"col-4 col-md-3\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  setGovernment(false)\n                }}\n              >\n                Reject Government\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n      {hosting && <ActionBar game={game} gameRef={gameRef} hosting={hosting} />}\n      <hr />\n      <EventList game={game} show={6} />\n    </div>\n  )\n}\n\nexport default App\n","let testPlayers\nif (process.env.NODE_ENV === 'production') {\n  testPlayers = []\n} else {\n  testPlayers = [\n    'adam',\n    'cindy',\n    'david',\n    // 'edgar',\n    // 'fred',\n    // 'gary', 'helen', 'igor'\n  ]\n}\n\nconst defaultGame = {\n  players: testPlayers,\n  roles: {},\n  started: false,\n  host: null,\n  policies: [],\n  discards: [],\n  government: {\n    president: null,\n    chancellor: null,\n  },\n  governmentApproved: false,\n  events: [],\n  presidentHasChosen: false,\n  policyChoices: [],\n  enactedPolicies: [],\n  gameOver: false,\n  presidentShouldInvestigate: false,\n  presidentShouldKill: false,\n  presidentShouldViewPolicies: false,\n  chancellorHasVetoed: false,\n  presidentRejectedVeto: false,\n  lastPresident: null,\n  lastChancellor: null,\n}\n\nexport default defaultGame\n","import React, { useState } from 'react'\nimport produce from 'immer'\nimport words from './data/short-got.json'\nimport { random, capitalize } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport firestore from './firestore'\nimport { updateGame } from './utils'\nimport theme from './theme'\nimport App from './App'\nimport defaultGame from './defaultGame'\n\nconst { redTeamLeader } = theme\n\nconst randomChoice = (arr) => {\n  return arr[random(0, arr.length - 1)]\n}\n\nfunction Main(props) {\n  const prod = process.env.NODE_ENV === 'production'\n  const savedName = prod ? localStorage.getItem('playerName') || '' : 'testhost'\n\n  const [game, setGame] = useState(props.game || defaultGame)\n  const [nameConfirmed, setNameConfirmed] = useState(false)\n  const [gameCode, setGameCode] = useState(localStorage.getItem('gameCode') || '')\n  const [gameRef, setGameRef] = useState(props.gameRef || null)\n  const [name, setName] = useState(savedName)\n  const [hosting, setHosting] = useState(false)\n  const [submitted, setSubmitted] = useState(false)\n\n  const history = useHistory()\n\n  const handleNameConfirm = () => {\n    setNameConfirmed(true)\n  }\n\n  const handleHosting = async (e) => {\n    e.preventDefault()\n    localStorage.setItem('gameCode', gameCode)\n    console.log('hosting!', gameCode)\n    setHosting(true)\n    let gRef = await firestore.collection('hgames').doc(gameCode)\n    setGameRef(gRef)\n    gRef.onSnapshot((doc) => {\n      const gameData = doc.data()\n      console.log(gameData)\n      setGame(gameData)\n    })\n    gRef.update({\n      host: name,\n      lastUpdate: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n  }\n\n  const handleCreateGame = async () => {\n    const wordCode = randomChoice(words)\n    setGameCode(wordCode)\n    const event = `Game created. Code: ${wordCode}`\n    localStorage.setItem('gameCode', wordCode)\n    const newGame = produce(game, (draft) => {\n      draft.players.push(name)\n      draft.code = wordCode\n      draft.host = name\n      draft.events.push(event)\n    })\n    let gRef = await firestore.collection('hgames').doc(wordCode)\n\n    setGameRef(gRef)\n    gRef.onSnapshot((doc) => {\n      setGame(doc.data())\n    })\n    updateGame(gRef, newGame)\n    setHosting(true)\n  }\n\n  const handleJoin = (e) => {\n    e.preventDefault()\n    history.push(`/g/${gameCode}`)\n  }\n\n  if (!nameConfirmed) {\n    return (\n      <div className=\"container\">\n        <h2 className=\"headline text-center\">Secret {capitalize(redTeamLeader)}</h2>\n        <div className=\"row mt-3\">\n          <div className=\"col-3\">Enter your name:</div>\n          <div className=\"col\">\n            <form onSubmit={handleNameConfirm}>\n              <input\n                autoFocus\n                value={name}\n                onChange={(e) => {\n                  localStorage.setItem('playerName', e.target.value)\n                  setName(e.target.value)\n                }}\n              />\n              <input className=\"btn btn-primary ml-3\" type=\"submit\" value=\"Next\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!game.started && !game.code) {\n    return (\n      <div className=\"container\">\n        <h2 className=\"headline text-center\">Secret {capitalize(redTeamLeader)}</h2>\n        <div className=\"row mt-3\">\n          <>\n            <p>Your name: {name}</p>\n          </>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <label className=\"pr-3\">Game Code:</label>\n            <input autoFocus value={gameCode} onChange={(e) => setGameCode(e.target.value)} />\n          </div>\n          <div className=\"col\">\n            <button className=\"btn btn-primary ml-3\" onClick={handleHosting}>\n              Host Game\n            </button>\n          </div>\n          <div className=\"col\">\n            <button className=\"btn btn-primary ml-3\" onClick={handleJoin}>\n              Join Game\n            </button>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row mt-3\">\n          <div className=\"col\">\n            <button className=\"btn btn-primary ml-3\" onClick={handleCreateGame}>\n              Create New Game\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return <App game={game} gameRef={gameRef} name={name} hosting={hosting} />\n}\n\nexport default Main\n","import React, { useEffect, useState } from 'react'\nimport { get } from 'lodash'\nimport produce from 'immer'\nimport firestore from './firestore'\nimport { updateGame } from './utils'\nimport App from './App'\n\nfunction Game(props) {\n  const prod = process.env.NODE_ENV === 'production'\n\n  const [loaded, setLoaded] = useState(false)\n  const [name, setName] = useState(localStorage.getItem('playerName') || '')\n  const [game, setGame] = useState(null)\n  const [gameRef, setGameRef] = useState(null)\n  const code = get(props, 'match.params.code', null)\n  const [submitted, setSubmitted] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setSubmitted(true)\n    localStorage.setItem('playerName', name)\n\n    const { players } = game\n    if (players.includes(name)) {\n      console.log('Name already registered')\n      return\n    }\n    if (game.started) {\n      console.log('Game already started!')\n      return\n    }\n    const newGame = produce(game, (draft) => {\n      draft.players.push(name)\n    })\n\n    updateGame(gameRef, newGame)\n  }\n\n  useEffect(() => {\n    const register = async () => {\n      const gRef = await firestore.collection('hgames').doc(code)\n      setGameRef(gRef)\n      setLoaded(true)\n      gRef.onSnapshot((doc) => {\n        const gameData = doc.data()\n        setGame(gameData)\n      })\n    }\n    if (code !== null) {\n      register()\n    }\n  }, [code])\n\n  if (game === null) {\n    return null\n  }\n\n  if (!submitted || !game.players.includes(name)) {\n    return (\n      <div className=\"container\">\n        <h2>Confirm your name</h2>\n        {!submitted ? (\n          <form onSubmit={handleSubmit}>\n            <input\n              autoFocus\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value)\n              }}\n            />\n            <input type=\"submit\" className=\"btn btn-primary ml-3\" value=\"Next\" />\n          </form>\n        ) : (\n          <div className=\"row mt-3\">\n            <p>You are: {name}</p>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  return <App game={game} gameRef={gameRef} name={name} />\n}\n\nexport default Game\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './Main'\nimport Game from './Game'\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/g/:code\" component={Game} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './styles/index.scss'\nimport Routes from './Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}